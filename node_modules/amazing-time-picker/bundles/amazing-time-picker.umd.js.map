{"version":3,"file":"amazing-time-picker.umd.js","sources":["~/amazing-time-picker/src/app/atp-library/atp-time-picker.module.ts","~/amazing-time-picker/src/app/atp-library/atp.directive.ts","~/amazing-time-picker/src/app/atp-library/atp-time-picker.service.ts","~/amazing-time-picker/src/app/atp-library/preferences.ts","~/amazing-time-picker/src/app/atp-library/atp-time-picker/atp-time-picker.component.ts","~/amazing-time-picker/src/app/atp-library/time-picker/time-picker.component.ts","~/amazing-time-picker/src/app/atp-library/atp-core.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { AtpTimePickerComponent } from './atp-time-picker/atp-time-picker.component';\nimport { AmazingTimePickerService } from './atp-time-picker.service';\nimport { AtpDirective } from './atp.directive';\nimport { AtpCoreService } from './atp-core.service';\nexport class AmazingTimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TimePickerComponent,\n    AtpTimePickerComponent,\n    AtpDirective\n  ],\n  providers: [\n    AmazingTimePickerService,\n    AtpCoreService\n  ],\n  entryComponents: [TimePickerComponent],\n  exports: [\n    TimePickerComponent,\n    AtpTimePickerComponent,\n    AtpDirective\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AmazingTimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAmazingTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAmazingTimePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, Output, EventEmitter, HostListener, ElementRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AmazingTimePickerService } from './atp-time-picker.service';\nexport class AtpDirective implements ControlValueAccessor {\n\n   myClick = new EventEmitter();\nprivate elementRef: ElementRef;\nprivate onChange = (x: any): void => {};\n/**\n * @param {?} viewContainerRef\n * @param {?} atp\n */\nconstructor(\npublic viewContainerRef: ViewContainerRef,\nprivate atp: AmazingTimePickerService) {\n    this.elementRef = this.viewContainerRef.element;\n  }\n/**\n * @param {?} e\n * @return {?}\n */\nonClick(e) {\n    const /** @type {?} */ ele = this.viewContainerRef.element.nativeElement;\n    const /** @type {?} */ time = ele.value;\n    const /** @type {?} */ theme = ele.getAttribute('theme');\n    const /** @type {?} */ start = ele.getAttribute('start');\n    const /** @type {?} */ end = ele.getAttribute('end');\n    const /** @type {?} */ locale = ele.getAttribute('locale') || 'en';\n    const /** @type {?} */ changeToMinutes = ele.getAttribute('changeToMinutes') === 'true';\n    const /** @type {?} */ preference = ele.getAttribute('preference') || null;\n    const /** @type {?} */ onlyHour = ele.getAttribute('onlyHour') || false;\n    const /** @type {?} */ onlyMinute = ele.getAttribute('onlyMinute') || false;\n    const /** @type {?} */ onlyAM = ele.getAttribute('onlyAM') || false;\n    const /** @type {?} */ onlyPM = ele.getAttribute('onlyPM') || false;\n    let /** @type {?} */ arrowStyle = ele.getAttribute('arrowStyle');\n    arrowStyle = (arrowStyle) ? JSON.parse(arrowStyle.replace(new RegExp('\\'', 'g'), '\"')) : '';\n    const /** @type {?} */ timePickerFunction = this.atp.open({\n      time,\n      theme,\n      rangeTime: { start, end},\n      'arrowStyle': arrowStyle,\n      locale,\n      changeToMinutes,\n      onlyHour,\n      onlyMinute,\n      onlyAM,\n      onlyPM,\n      preference\n    });\n\n    timePickerFunction.afterClose().subscribe(retTime => {\n      this.writeValue(retTime); // update the native element\n      this.onChange(retTime); // update the form value (if there's a form)\n    });\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n    if (this.elementRef) {\n      this.elementRef.nativeElement.value = value;\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\n    this.onChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn) {  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'input[atp-time-picker]',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: AtpDirective,\n    multi: true\n  }]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: AmazingTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'myClick': [{ type: Output },],\n'onClick': [{ type: HostListener, args: ['click', ['$event'], ] },],\n};\n}\n\nfunction AtpDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAtpDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAtpDirective.ctorParameters;\n/** @type {?} */\nAtpDirective.propDecorators;\n/** @type {?} */\nAtpDirective.prototype.myClick;\n/** @type {?} */\nAtpDirective.prototype.elementRef;\n/** @type {?} */\nAtpDirective.prototype.onChange;\n/** @type {?} */\nAtpDirective.prototype.viewContainerRef;\n/** @type {?} */\nAtpDirective.prototype.atp;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, ViewContainerRef, Injector, ApplicationRef, ComponentFactoryResolver, EmbeddedViewRef } from '@angular/core';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { TimePickerConfig, IDialogResult } from './definitions';\nimport { Observable } from 'rxjs/Rx';\nimport { Subject } from 'rxjs/Subject';\nimport { Preference } from './preferences';\nexport class AmazingTimePickerService {\n/**\n * @param {?} resolver\n * @param {?} appRef\n * @param {?} injector\n */\nconstructor (\nprivate resolver: ComponentFactoryResolver,\nprivate appRef: ApplicationRef,\nprivate injector: Injector\n  ) {}\n/**\n * @param {?=} config\n * @return {?}\n */\nopen (config?: TimePickerConfig): IDialogResult {\n    const /** @type {?} */ thems = ['light', 'dark', 'material-red', 'material-green', 'material-blue', 'material-purple', 'material-orange'];\n    const /** @type {?} */ _self = this;\n    config = config || {};\n    config = /** @type {?} */(( {\n      time: config.time || '00:00',\n      theme: thems.indexOf(config.theme) > 0 ? config.theme : 'light' || config.theme || 'light',\n      rangeTime: config.rangeTime || {start: '0:0', end: '24:0'},\n      arrowStyle: config.arrowStyle || {},\n      locale: config.locale || 'en',\n      changeToMinutes: config.changeToMinutes || false,\n      preference: config.preference || null,\n      onlyHour: config.onlyHour || false,\n      onlyMinute: config.onlyMinute || false,\n      onlyAM: config.onlyAM || false,\n      onlyPM: config.onlyPM || false,\n    } as TimePickerConfig));\n    config.rangeTime = {\n      start: config.rangeTime.start || '0:0',\n      end: config.rangeTime.end || '24:0',\n    };\n    config.arrowStyle = {\n      background: (config.arrowStyle.background) ?\n      config.arrowStyle.background : config.theme !== undefined ?\n      config.theme === 'dark' ? 'rgb(128, 203, 196)' : '' : '',\n      color: config.arrowStyle.color || ''\n    };\n    const /** @type {?} */ componentRef = this.resolver.resolveComponentFactory(TimePickerComponent);\n    const /** @type {?} */ tsc = componentRef.create(this.injector);\n    this.appRef.attachView(tsc.hostView);\n    const /** @type {?} */ domElem = /** @type {?} */(( ( /** @type {?} */((tsc.hostView as EmbeddedViewRef<any>))).rootNodes[0] as HTMLElement));\n    document.body.appendChild(domElem);\n    tsc.instance.subject = new Subject<any>();\n    tsc.instance._ref = tsc;\n    tsc.instance.appRef = this.appRef;\n    tsc.instance.timerElement = '';\n    tsc.instance.config = config;\n    if (config.preference) {\n      tsc.instance.preference = config.preference;\n    } else {\n      tsc.instance.preference = Preference(config.locale);\n    }\n    tsc.instance.ParseStringToTime(config.time);\n    return {\n      afterClose: function () {\n        return tsc.instance.subject.asObservable();\n      }\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: ApplicationRef, },\n{type: Injector, },\n];\n}\n\nfunction AmazingTimePickerService_tsickle_Closure_declarations() {\n/** @type {?} */\nAmazingTimePickerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAmazingTimePickerService.ctorParameters;\n/** @type {?} */\nAmazingTimePickerService.prototype.resolver;\n/** @type {?} */\nAmazingTimePickerService.prototype.appRef;\n/** @type {?} */\nAmazingTimePickerService.prototype.injector;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { IDisplayPreference } from './definitions';\n\nconst /** @type {?} */ arabic = new Intl.NumberFormat('ar-AE');\nconst /** @type {?} */ persian = new Intl.NumberFormat('fa-IR');\n\nexport const /** @type {?} */ PersianPreference: IDisplayPreference = {\n  hour: (x) => persian.format(x),\n  minute: (x) => {\n    let /** @type {?} */ exp = persian.format(x);\n    if (exp.length === 1) {\n      exp = persian.format(0) + exp;\n    }\n    return exp;\n  },\n  separator: ':',\n  period: (x) => x === 'AM' ? 'صبح' : 'عصر',\n  clockHour: (x) => persian.format(x),\n  clockMinute: (x) => persian.format(x),\n  labels: {\n    ok: 'تایید',\n    cancel: 'لغو'\n  }\n};\n\nexport const /** @type {?} */ ArabicPreference: IDisplayPreference = {\n  hour: (x) => arabic.format(x),\n  minute: (x) => {\n    let /** @type {?} */ exp = arabic.format(x);\n    if (exp.length === 1) {\n      exp = arabic.format(0) + exp;\n    }\n    return exp;\n  },\n  separator: ':',\n  period: (x) => x === 'AM' ? 'صباحا' : 'مساء',\n  clockHour: (x) => arabic.format(x),\n  clockMinute: (x) => arabic.format(x),\n  labels: {\n    ok: 'حسنا',\n    cancel: 'إلغاء'\n  }\n};\n\nexport const /** @type {?} */ ChinesePreference: IDisplayPreference = {\n  hour:  (x) => x,\n  minute: (x) => {\n    let /** @type {?} */ exp = x;\n    if (exp.length === 1) {\n      exp = '۰' + exp;\n    }\n    return exp;\n  },\n  separator: ':',\n  period: (x) => x === 'AM' ? '上午' : '下午',\n  clockHour: (x) => x,\n  clockMinute: (x) => x,\n  labels: {\n    ok: '好',\n    cancel: '取消'\n  }\n};\n\nexport const /** @type {?} */ Preference = (locale: string): IDisplayPreference => {\n  switch (locale) {\n    case 'fa':\n        return PersianPreference;\n    case 'ar':\n        return ArabicPreference;\n    case 'ch':\n        return ChinesePreference;\n    default:\n      return null;\n  }\n};\n","import { Component, ViewChild, ViewContainerRef, Output, ComponentFactoryResolver, OnInit, ApplicationRef, EventEmitter\n} from '@angular/core';\nimport { TimePickerComponent } from '../time-picker/time-picker.component';\nimport { TimePickerConfig } from '../definitions';\nimport { Subject } from 'rxjs/Subject';\nexport class AtpTimePickerComponent implements OnInit {\n   container: ViewContainerRef;\n   timeSelected: EventEmitter<string> = new EventEmitter<string>();\npublic config: TimePickerConfig = {};\n/**\n * @param {?} resolver\n * @param {?} appRef\n */\nconstructor(\nprivate resolver: ComponentFactoryResolver,\nprivate appRef: ApplicationRef,\n  ) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    let /** @type {?} */ config = this.config;\n    config = {\n      time: config.time || '00:00',\n      theme: ['light', 'dark', 'material'].indexOf(config.theme) > 0 ? config.theme : 'light' || config.theme || 'light',\n      rangeTime: config.rangeTime || {start: '0:0', end: '24:0'},\n      arrowStyle: config.arrowStyle || {}\n    };\n    config.arrowStyle = {\n      background: (config.arrowStyle.background) ?\n      config.arrowStyle.background : config.theme !== undefined ?\n      config.theme === 'dark' ? 'rgb(128, 203, 196)' : 'blue' : 'blue',\n      color: config.arrowStyle.color || '#fff'\n    };\n    const /** @type {?} */ cfr = this.resolver.resolveComponentFactory(TimePickerComponent);\n    const /** @type {?} */ tsc = this.container.createComponent(cfr);\n    tsc.instance.subject = new Subject<any>();\n    tsc.instance._ref = tsc;\n    tsc.instance.appRef = this.appRef;\n    tsc.instance.timerElement = '';\n    tsc.instance.config = config;\n    tsc.instance.activeModal = true;\n    tsc.instance.isPopup = false;\n    tsc.instance.ParseStringToTime(config.time);\n    tsc.instance.subject.asObservable().subscribe(time => {\n      this.timeSelected.emit(time);\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'atp-time-picker',\n  template: `\n    <div #container></div>\n  `,\n  styles: [`\n    .atp-time-picker .icon-container {\n      display: inline-block;\n      margin-right: .2em; }\n      .atp-time-picker .icon-container svg {\n        cursor: pointer;\n        position: relative;\n        top: .5em; }\n      .atp-time-picker .icon-container /deep/ i {\n        cursor: pointer; }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: ApplicationRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'container': [{ type: ViewChild, args: ['container', { read: ViewContainerRef }, ] },],\n'timeSelected': [{ type: Output },],\n};\n}\n\nfunction AtpTimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nAtpTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAtpTimePickerComponent.ctorParameters;\n/** @type {?} */\nAtpTimePickerComponent.propDecorators;\n/** @type {?} */\nAtpTimePickerComponent.prototype.container;\n/** @type {?} */\nAtpTimePickerComponent.prototype.timeSelected;\n/** @type {?} */\nAtpTimePickerComponent.prototype.config;\n/** @type {?} */\nAtpTimePickerComponent.prototype.resolver;\n/** @type {?} */\nAtpTimePickerComponent.prototype.appRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { IClockNumber, IDisplayPreference, TimePickerConfig } from '../definitions';\nimport { AtpCoreService } from '../atp-core.service';\nimport { ITime } from '../definitions';\nexport class TimePickerComponent implements OnInit {\n\n  _ref: any;\npublic subject: any = null;\npublic activeModal = false;\npublic timerElement: any;\npublic clockObject: Array<any>;\npublic isClicked: boolean;\npublic clockType: 'minute' | 'hour' = 'hour';\npublic time: ITime = {\n    ampm: 'AM',\n    minute: 0,\n    hour: 12\n  };\npublic nowTime: any = this.time.hour;\npublic degree: any;\npublic config: TimePickerConfig;\npublic appRef: any;\npublic isPopup = true;\npublic allowed: any;\npublic preference: IDisplayPreference;\n/**\n * @param {?} core\n */\nconstructor(\nprivate core: AtpCoreService\n  ) { }\n/**\n * @param {?} time\n * @return {?}\n */\npublic ParseStringToTime (time: string): void {\n    time = (time === '' || time === undefined || time === null) ? this.time.hour + ':' + this.time.minute : time;\n    this.time = this.core.StringToTime(time);\n  }\n/**\n * @return {?}\n */\npublic GetTime () {\n    const /** @type {?} */ time = this.core.TimeToString(this.time);\n    this.subject.next(time);\n  }\n\n  clockMaker = () => {\n    const /** @type {?} */ type = this.clockType;\n    this.clockObject = this.core.ClockMaker(type);\n    this.setArrow(null);\n  }\n\n  setActiveTime = () => {\n    this.nowTime = (this.clockType === 'minute' ? this.time.minute : this.time.hour);\n  }\n\n  setArrow = (obj: any) => {\n    if (obj) {\n      this.clockType = obj.type;\n      if (this.clockType === 'minute') {\n        this.time.minute = obj.time;\n      } else {\n        this.time.hour = obj.time;\n      }\n    }\n    const /** @type {?} */ step = (this.clockType === 'minute') ? 6 : 30;\n    const /** @type {?} */ time = (this.clockType === 'minute') ? this.time.minute : this.time.hour;\n    const /** @type {?} */ degrees = time * step;\n    this.rotationClass(degrees);\n    this.setActiveTime();\n  }\n\n  rotationClass = (degrees: any) => {\n    this.degree = degrees;\n  }\n/**\n * @return {?}\n */\nsetTime() {\n    this.isClicked = false;\n    if (this.config.changeToMinutes && this.clockType === 'hour') {\n      this.clockType = 'minute';\n      this.clockMaker();\n    }\n  }\n\n  getDegree = (ele: any) => {\n    const /** @type {?} */ step = this.clockType === 'minute' ? 6 : 30;\n    const /** @type {?} */ parrentPos = ele.currentTarget.getBoundingClientRect();\n    if (this.isClicked && (ele.currentTarget === ele.target || ele.target.nodeName === 'BUTTON')) {\n      const /** @type {?} */ clock = {\n        width: ele.currentTarget.offsetWidth,\n        height: ele.currentTarget.offsetHeight\n      };\n      const /** @type {?} */ degrees = this.core.CalcDegrees(ele, parrentPos, step);\n      let /** @type {?} */ hour = this.time.hour, /** @type {?} */\n          minute = this.time.minute;\n\n      if (this.clockType === 'hour') {\n        hour = (degrees / step);\n        hour = (hour > 12) ? hour - 12 : hour;\n      } else if (this.clockType === 'minute') {\n        minute = (degrees / step);\n        minute = (minute > 59) ? minute - 60 : minute;\n      }\n\n      const /** @type {?} */ min = this.config.rangeTime.start, /** @type {?} */\n            max = this.config.rangeTime.end;\n\n      const /** @type {?} */ nowMinHour = +min.split(':')[0] < 12 ? +min.split(':')[0] : +min.split(':')[0] - 12;\n      const /** @type {?} */ nowMaxHour = +max.split(':')[0] < 12 ? +max.split(':')[0] : +max.split(':')[0] - 12;\n      const /** @type {?} */ nowMinMin = +min.split(':')[1];\n      const /** @type {?} */ nowMaxMin = +max.split(':')[1];\n\n      const /** @type {?} */ nowTime = this.GetNowTime(hour, this.time.ampm, minute);\n      if (this.allowed.indexOf(nowTime) > -1) {\n        this.time.hour = hour;\n        this.time.minute = minute;\n        this.rotationClass(degrees);\n        this.setActiveTime();\n      }else if (this.clockType === 'hour' && (hour === nowMinHour && minute <= nowMinMin)) {\n        this.time.hour = nowMinHour;\n        this.time.minute = nowMinMin;\n      }else if (this.clockType === 'hour' && (hour === nowMaxHour && minute >= nowMaxMin)) {\n        this.time.hour = nowMaxHour;\n        this.time.minute = nowMaxMin;\n      }\n    }\n  }\n/**\n * @param {?} hour\n * @param {?} ampm\n * @param {?} minute\n * @return {?}\n */\nprivate GetNowTime (hour: number, ampm: 'AM' | 'PM', minute: number): string {\n    const /** @type {?} */ Hour = (hour === 12 && ampm === 'AM') ? '0' : hour;\n    const /** @type {?} */ nowTime = Hour + ':' + minute + ' ' + ampm;\n    return nowTime;\n  }\n/**\n * @return {?}\n */\ncheckBet() {\n    const /** @type {?} */ nowTime = this.GetNowTime(this.time.hour, this.time.ampm, this.time.minute);\n    if (this.allowed.indexOf(nowTime) === -1) {\n      this.ParseStringToTime(this.config.rangeTime.start);\n      this.setArrow(null);\n      this.setActiveTime();\n    }\n  }\n/**\n * @return {?}\n */\nmodalAnimation() {\n    setTimeout(() => {\n      this.activeModal = true;\n    }, 1);\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.allowed = this.core.allowedTimes (this.config.rangeTime.start, this.config.rangeTime.end);\n    if (this.config && this.config.onlyMinute) {\n      this.clockType = 'minute';\n    }\n    if (this.config && this.config.onlyPM) {\n      this.time.ampm = 'PM';\n    }\n    this.clockMaker();\n    this.modalAnimation();\n  }\n/**\n * @return {?}\n */\npublic MinuteClick () {\n    /**\n     * We are not permitting user to select the minute.\n     * but anyway, it will return the standard time, if provided the default time.\n     */\n    if (this.config && this.config.onlyHour) {\n      return false;\n    }\n    this.clockType = 'minute';\n    this.clockMaker();\n  }\n/**\n * @return {?}\n */\npublic HourClick () {\n    /**\n     * We are not permitting user to select the minute.\n     * but anyway, it will return the standard time, if provided the default time.\n     */\n    if (this.config && this.config.onlyMinute) {\n      return false;\n    }\n    this.clockType = 'hour';\n    this.clockMaker();\n  }\n/**\n * @return {?}\n */\nSetAM () {\n    if (this.config && this.config.onlyPM) {\n      return false;\n    }\n    this.time.ampm = 'AM';\n    this.checkBet();\n  }\n/**\n * @return {?}\n */\nSetPM () {\n    if (this.config && this.config.onlyAM) {\n      return false;\n    }\n    this.time.ampm = 'PM';\n    this.checkBet();\n  }\n/**\n * @param {?} e\n * @return {?}\n */\nClose(e: any) {\n    if (e.target === e.currentTarget) {\n      if (this.isPopup === true) {\n        this.activeModal = false;\n        setTimeout(() => {\n          this.appRef.detachView(this._ref.hostView);\n          this._ref.destroy();\n        }, 400);\n      }\n    }\n  }\n/**\n * @return {?}\n */\npublic GetSeparator () {\n    if (this.preference && this.preference.separator) {\n      return this.preference.separator;\n    }\n    return ':';\n  }\n/**\n * @param {?} period\n * @return {?}\n */\npublic GetPeriod (period: 'AM' | 'PM') {\n    if (this.preference && this.preference.period) {\n      return this.preference.period(period);\n    }\n    return period;\n  }\n/**\n * @return {?}\n */\npublic GetMinute () {\n    if (this.preference && this.preference.minute) {\n      return this.preference.minute(this.time.minute);\n    }\n    let /** @type {?} */ min: string = this.time.minute.toString();\n    if (+min < 10) {\n      min = '0' + min;\n    }\n    return min;\n  }\n/**\n * @return {?}\n */\npublic GetHour () {\n    if (this.preference && this.preference.hour) {\n      return this.preference.hour(this.time.hour);\n    }\n    return this.time.hour;\n  }\n/**\n * @param {?} clock\n * @return {?}\n */\npublic GetClockTime(clock: IClockNumber) {\n    if ( ! this.preference) {\n      return clock.time;\n    }\n    if ( this.clockType === 'hour' && this.preference.clockHour) {\n      return this.preference.clockHour(clock.time);\n    }\n    if ( this.clockType === 'minute' && this.preference.clockMinute) {\n      return this.preference.clockMinute(clock.time);\n    }\n    return clock.time;\n  }\n/**\n * @param {?} key\n * @return {?}\n */\npublic GetLabel (key: string) {\n    const /** @type {?} */ defaults = {\n      'ok': 'Ok',\n      'cancel': 'Cancel'\n    };\n    if ((this.preference && this.preference.labels && this.preference.labels.ok)) {\n      defaults.ok = this.preference.labels.ok;\n    }\n    if ((this.preference && this.preference.labels && this.preference.labels.cancel)) {\n      defaults.cancel = this.preference.labels.cancel;\n    }\n    return defaults[key];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'time-picker',\n  template: `\n    <div id=\"time-picker-wrapper\" class=\"{{config.theme}}\" [ngClass]=\"{'active': activeModal, 'static': !isPopup}\" (click)=\"Close($event);\">\n      <div id=\"time-picker\" [ngClass]=\"{'active': activeModal, 'static': !isPopup}\">\n        <div class=\"time-picker-header\">\n          <div class=\"time-picker-selected-time\">\n              <div class=\"time-picker-hour\" (click)=\"HourClick()\" [attr.disabled]=\"(config.onlyMinute) ? 'disabled' : null\"\n                [ngClass]=\"{'selected' : clockType == 'hour'}\">{{GetHour()}}</div>\n              <span class=\"time-seprator\">{{GetSeparator()}}</span>\n              <div class=\"time-picker-minute\" (click)=\"MinuteClick();\" [attr.disabled]=\"(config.onlyHour) ? 'disabled' : null\"\n                [ngClass]=\"{'selected' : clockType == 'minute'}\">{{GetMinute()}}</div>\n          </div>\n          <div class=\"time-picker-selected-ampm\">\n            <div class=\"time-picker-am\" (click)=\"SetAM();\" [attr.disabled]=\"(config.onlyPM) ? 'disabled' : null\" [ngClass]=\"{'selected' : time.ampm == 'AM'}\">{{GetPeriod('AM')}}</div>\n            <div class=\"time-picker-pm\" (click)=\"SetPM();\" [attr.disabled]=\"(config.onlyAM) ? 'disabled' : null\" [ngClass]=\"{'selected' : time.ampm == 'PM'}\">{{GetPeriod('PM')}}</div>\n\n          </div>\n        </div>\n        <div class=\"time-picker-content\">\n            <div class=\"time-picker-clock\" (mousemove)=\"getDegree($event);\" (mousedown)=\"isClicked=true; getDegree($event);\" (mouseup)=\"setTime()\">\n              <button *ngFor=\"let clock of clockObject\" [ngClass]=\"{'active' : nowTime == clock.time}\" \n                [id]=\"'timepicker-item-id-' + clock.time\" \n                [ngStyle]=\"{top: clock.top,left: clock.left, color: nowTime == clock.time ? config.arrowStyle.color :  '', background: nowTime == clock.time ? config.arrowStyle.background : 'transparent'}\">\n                {{GetClockTime(clock)}}\n              </button>\n              <div class=\"time-picker-clock-origin\" [ngStyle]=\"{ background: config.arrowStyle.background}\"></div>\n              <div id=\"tpc-arrow\" class=\"time-picker-clock-arrow\" [ngStyle]=\"{transform: 'rotate(' + this.degree + 'deg)','-webkit-transform': 'rotate(' + this.degree + 'deg)', background: config.arrowStyle.background}\">\n                <span [ngStyle]=\"{ background: config.arrowStyle.background }\"></span>\n              </div>\n            </div>\n        </div>\n        <div class=\"time-picker-footer\">\n            <button (click)=\"Close($event);\">{{GetLabel('cancel')}}</button>\n            <button (click)=\"GetTime();Close($event);\" class=\"atp-ref-dialog-close\">{{GetLabel('ok')}}</button>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    #time-picker-wrapper {\n      position: fixed;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      background: transparent;\n      -webkit-transition: background 0.4s;\n      transition: background 0.4s;\n      font-family: 'Roboto', sans-serif;\n      z-index: 1000; }\n      #time-picker-wrapper.static {\n        position: relative !important;\n        background: transparent !important;\n        display: inline-block;\n        z-index: 0; }\n      #time-picker-wrapper.active {\n        background: rgba(0, 0, 0, 0.3); }\n      #time-picker-wrapper.dark #time-picker {\n        background: #424242; }\n        #time-picker-wrapper.dark #time-picker .time-picker-header {\n          border-bottom: none;\n          background: #555555; }\n          #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-time {\n            color: #999; }\n            #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #fff; }\n          #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: #999; }\n            #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #fff; }\n        #time-picker-wrapper.dark #time-picker .time-picker-clock {\n          background: #555555; }\n          #time-picker-wrapper.dark #time-picker .time-picker-clock > button {\n            color: #fff; }\n        #time-picker-wrapper.dark #time-picker .time-picker-footer {\n          border-top: none; }\n          #time-picker-wrapper.dark #time-picker .time-picker-footer button {\n            background: #555555;\n            color: #fff; }\n            #time-picker-wrapper.dark #time-picker .time-picker-footer button:hover {\n              background: #777; }\n      #time-picker-wrapper.light #time-picker {\n        background: #fff; }\n        #time-picker-wrapper.light #time-picker .time-picker-header {\n          border-bottom: 1px solid #e1e1e1; }\n          #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-time {\n            color: #aaa; }\n            #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #000; }\n          #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: #aaa; }\n            #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #000; }\n        #time-picker-wrapper.light #time-picker .time-picker-clock {\n          background: #ededed; }\n          #time-picker-wrapper.light #time-picker .time-picker-clock > button {\n            color: #000; }\n            #time-picker-wrapper.light #time-picker .time-picker-clock > button.active {\n              background: blue;\n              color: #fff; }\n          #time-picker-wrapper.light #time-picker .time-picker-clock .time-picker-clock-origin {\n            background: blue; }\n          #time-picker-wrapper.light #time-picker .time-picker-clock .time-picker-clock-arrow {\n            background: blue; }\n            #time-picker-wrapper.light #time-picker .time-picker-clock .time-picker-clock-arrow span {\n              background: blue; }\n        #time-picker-wrapper.light #time-picker .time-picker-footer {\n          border-top: 1px solid #e1e1e1; }\n          #time-picker-wrapper.light #time-picker .time-picker-footer button {\n            background: #f1f1f1; }\n            #time-picker-wrapper.light #time-picker .time-picker-footer button:hover {\n              background: #ddd; }\n      #time-picker-wrapper.material-green #time-picker {\n        background: #fff; }\n        #time-picker-wrapper.material-green #time-picker .time-picker-header {\n          background-color: #00897b;\n          border-bottom: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-green #time-picker .time-picker-header .time-picker-selected-time {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-green #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #fff; }\n          #time-picker-wrapper.material-green #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-green #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #fff; }\n        #time-picker-wrapper.material-green #time-picker .time-picker-clock {\n          background: #ededed; }\n          #time-picker-wrapper.material-green #time-picker .time-picker-clock > button {\n            color: #000; }\n            #time-picker-wrapper.material-green #time-picker .time-picker-clock > button.active {\n              background: #00897b;\n              color: #fff; }\n          #time-picker-wrapper.material-green #time-picker .time-picker-clock .time-picker-clock-origin {\n            background: #00897b; }\n          #time-picker-wrapper.material-green #time-picker .time-picker-clock .time-picker-clock-arrow {\n            background: #00897b; }\n            #time-picker-wrapper.material-green #time-picker .time-picker-clock .time-picker-clock-arrow span {\n              background: #00897b; }\n        #time-picker-wrapper.material-green #time-picker .time-picker-footer {\n          border-top: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-green #time-picker .time-picker-footer button {\n            font-weight: bold;\n            text-transform: uppercase;\n            background: transparent;\n            color: #00897b; }\n            #time-picker-wrapper.material-green #time-picker .time-picker-footer button:hover {\n              background: #ddd; }\n      #time-picker-wrapper.material-blue #time-picker {\n        background: #fff; }\n        #time-picker-wrapper.material-blue #time-picker .time-picker-header {\n          background-color: #3F51B5;\n          border-bottom: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-blue #time-picker .time-picker-header .time-picker-selected-time {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-blue #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #fff; }\n          #time-picker-wrapper.material-blue #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-blue #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #fff; }\n        #time-picker-wrapper.material-blue #time-picker .time-picker-clock {\n          background: #ededed; }\n          #time-picker-wrapper.material-blue #time-picker .time-picker-clock > button {\n            color: #000; }\n            #time-picker-wrapper.material-blue #time-picker .time-picker-clock > button.active {\n              background: #3F51B5;\n              color: #fff; }\n          #time-picker-wrapper.material-blue #time-picker .time-picker-clock .time-picker-clock-origin {\n            background: #3F51B5; }\n          #time-picker-wrapper.material-blue #time-picker .time-picker-clock .time-picker-clock-arrow {\n            background: #3F51B5; }\n            #time-picker-wrapper.material-blue #time-picker .time-picker-clock .time-picker-clock-arrow span {\n              background: #3F51B5; }\n        #time-picker-wrapper.material-blue #time-picker .time-picker-footer {\n          border-top: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-blue #time-picker .time-picker-footer button {\n            font-weight: bold;\n            text-transform: uppercase;\n            background: transparent;\n            color: #3F51B5; }\n            #time-picker-wrapper.material-blue #time-picker .time-picker-footer button:hover {\n              background: #ddd; }\n      #time-picker-wrapper.material-red #time-picker {\n        background: #fff; }\n        #time-picker-wrapper.material-red #time-picker .time-picker-header {\n          background-color: #F44336;\n          border-bottom: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-red #time-picker .time-picker-header .time-picker-selected-time {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-red #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #fff; }\n          #time-picker-wrapper.material-red #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-red #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #fff; }\n        #time-picker-wrapper.material-red #time-picker .time-picker-clock {\n          background: #ededed; }\n          #time-picker-wrapper.material-red #time-picker .time-picker-clock > button {\n            color: #000; }\n            #time-picker-wrapper.material-red #time-picker .time-picker-clock > button.active {\n              background: #F44336;\n              color: #fff; }\n          #time-picker-wrapper.material-red #time-picker .time-picker-clock .time-picker-clock-origin {\n            background: #F44336; }\n          #time-picker-wrapper.material-red #time-picker .time-picker-clock .time-picker-clock-arrow {\n            background: #F44336; }\n            #time-picker-wrapper.material-red #time-picker .time-picker-clock .time-picker-clock-arrow span {\n              background: #F44336; }\n        #time-picker-wrapper.material-red #time-picker .time-picker-footer {\n          border-top: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-red #time-picker .time-picker-footer button {\n            font-weight: bold;\n            text-transform: uppercase;\n            background: transparent;\n            color: #F44336; }\n            #time-picker-wrapper.material-red #time-picker .time-picker-footer button:hover {\n              background: #ddd; }\n      #time-picker-wrapper.material-purple #time-picker {\n        background: #fff; }\n        #time-picker-wrapper.material-purple #time-picker .time-picker-header {\n          background-color: #9C27B0;\n          border-bottom: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-purple #time-picker .time-picker-header .time-picker-selected-time {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-purple #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #fff; }\n          #time-picker-wrapper.material-purple #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-purple #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #fff; }\n        #time-picker-wrapper.material-purple #time-picker .time-picker-clock {\n          background: #ededed; }\n          #time-picker-wrapper.material-purple #time-picker .time-picker-clock > button {\n            color: #000; }\n            #time-picker-wrapper.material-purple #time-picker .time-picker-clock > button.active {\n              background: #9C27B0;\n              color: #fff; }\n          #time-picker-wrapper.material-purple #time-picker .time-picker-clock .time-picker-clock-origin {\n            background: #9C27B0; }\n          #time-picker-wrapper.material-purple #time-picker .time-picker-clock .time-picker-clock-arrow {\n            background: #9C27B0; }\n            #time-picker-wrapper.material-purple #time-picker .time-picker-clock .time-picker-clock-arrow span {\n              background: #9C27B0; }\n        #time-picker-wrapper.material-purple #time-picker .time-picker-footer {\n          border-top: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-purple #time-picker .time-picker-footer button {\n            font-weight: bold;\n            text-transform: uppercase;\n            background: transparent;\n            color: #9C27B0; }\n            #time-picker-wrapper.material-purple #time-picker .time-picker-footer button:hover {\n              background: #ddd; }\n      #time-picker-wrapper.material-orange #time-picker {\n        background: #fff; }\n        #time-picker-wrapper.material-orange #time-picker .time-picker-header {\n          background-color: #FF9800;\n          border-bottom: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-orange #time-picker .time-picker-header .time-picker-selected-time {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-orange #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #fff; }\n          #time-picker-wrapper.material-orange #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: rgba(255, 255, 255, 0.4); }\n            #time-picker-wrapper.material-orange #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #fff; }\n        #time-picker-wrapper.material-orange #time-picker .time-picker-clock {\n          background: #ededed; }\n          #time-picker-wrapper.material-orange #time-picker .time-picker-clock > button {\n            color: #000; }\n            #time-picker-wrapper.material-orange #time-picker .time-picker-clock > button.active {\n              background: #FF9800;\n              color: #fff; }\n          #time-picker-wrapper.material-orange #time-picker .time-picker-clock .time-picker-clock-origin {\n            background: #FF9800; }\n          #time-picker-wrapper.material-orange #time-picker .time-picker-clock .time-picker-clock-arrow {\n            background: #FF9800; }\n            #time-picker-wrapper.material-orange #time-picker .time-picker-clock .time-picker-clock-arrow span {\n              background: #FF9800; }\n        #time-picker-wrapper.material-orange #time-picker .time-picker-footer {\n          border-top: 1px solid #e1e1e1; }\n          #time-picker-wrapper.material-orange #time-picker .time-picker-footer button {\n            font-weight: bold;\n            text-transform: uppercase;\n            background: transparent;\n            color: #FF9800; }\n            #time-picker-wrapper.material-orange #time-picker .time-picker-footer button:hover {\n              background: #ddd; }\n      #time-picker-wrapper #time-picker {\n        width: 325px;\n        height: auto;\n        -webkit-box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n                box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n        border-radius: 2px;\n        margin: 15vh auto !important;\n        -webkit-transform: scale(0.5) !important;\n                transform: scale(0.5) !important;\n        -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;\n        transition: opacity 0.3s, -webkit-transform 0.3s;\n        transition: transform 0.3s, opacity 0.3s;\n        transition: transform 0.3s, opacity 0.3s, -webkit-transform 0.3s;\n        opacity: 0; }\n        #time-picker-wrapper #time-picker.static {\n          margin: 0px !important;\n          -webkit-box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 0 7px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n                  box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 0 7px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12); }\n        #time-picker-wrapper #time-picker.active {\n          -webkit-transform: scale(1) !important;\n                  transform: scale(1) !important;\n          opacity: 1; }\n        #time-picker-wrapper #time-picker .time-picker-header {\n          text-align: center;\n          padding: 15px 0px; }\n          #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-time {\n            font-size: 35px;\n            padding: 5px 0px; }\n            #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-time div {\n              display: inline-block;\n              cursor: pointer; }\n              #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-time div[disabled=true] {\n                cursor: default; }\n          #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-ampm {\n            font-size: 18px; }\n            #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-ampm div {\n              display: inline-block;\n              padding: 0 5px;\n              cursor: pointer; }\n              #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-ampm div[disabled=true] {\n                cursor: default; }\n        #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock {\n          width: 200px;\n          height: 200px;\n          padding: 24px;\n          border-radius: 50%;\n          cursor: pointer;\n          margin: 25px auto;\n          position: relative;\n          user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          -webkit-user-select: none; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock button {\n            border: none;\n            position: absolute;\n            width: 35px;\n            height: 35px;\n            border-radius: 50%;\n            cursor: pointer;\n            font-size: 17px;\n            text-align: center;\n            padding: 0;\n            -webkit-transition: all .2s;\n            transition: all .2s;\n            z-index: 3; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock .time-picker-clock-origin {\n            width: 6px;\n            height: 6px;\n            border-radius: 50%;\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            margin-left: -3px;\n            margin-top: -3px; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock .time-picker-clock-arrow {\n            width: 2px;\n            height: 41%;\n            position: absolute;\n            left: 0;\n            top: 22px;\n            right: 0;\n            margin: auto;\n            -webkit-transform-origin: top left;\n            transform-origin: bottom; }\n            #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock .time-picker-clock-arrow span {\n              width: 8px;\n              height: 8px;\n              border-radius: 50%;\n              position: absolute;\n              top: 0;\n              right: -3px; }\n        #time-picker-wrapper #time-picker .time-picker-footer {\n          padding: 15px;\n          text-align: right; }\n          #time-picker-wrapper #time-picker .time-picker-footer button {\n            border: transparent;\n            margin-left: 10px;\n            padding: 10px;\n            font-size: 14px;\n            border-radius: 2px;\n            cursor: pointer; }\n\n    * {\n      outline: none;\n      -webkit-box-sizing: content-box;\n              box-sizing: content-box; }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AtpCoreService, },\n];\n}\n\nfunction TimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimePickerComponent.ctorParameters;\n/** @type {?} */\nTimePickerComponent.prototype._ref;\n/** @type {?} */\nTimePickerComponent.prototype.subject;\n/** @type {?} */\nTimePickerComponent.prototype.activeModal;\n/** @type {?} */\nTimePickerComponent.prototype.timerElement;\n/** @type {?} */\nTimePickerComponent.prototype.clockObject;\n/** @type {?} */\nTimePickerComponent.prototype.isClicked;\n/** @type {?} */\nTimePickerComponent.prototype.clockType;\n/** @type {?} */\nTimePickerComponent.prototype.time;\n/** @type {?} */\nTimePickerComponent.prototype.nowTime;\n/** @type {?} */\nTimePickerComponent.prototype.degree;\n/** @type {?} */\nTimePickerComponent.prototype.config;\n/** @type {?} */\nTimePickerComponent.prototype.appRef;\n/** @type {?} */\nTimePickerComponent.prototype.isPopup;\n/** @type {?} */\nTimePickerComponent.prototype.allowed;\n/** @type {?} */\nTimePickerComponent.prototype.preference;\n/** @type {?} */\nTimePickerComponent.prototype.clockMaker;\n/** @type {?} */\nTimePickerComponent.prototype.setActiveTime;\n/** @type {?} */\nTimePickerComponent.prototype.setArrow;\n/** @type {?} */\nTimePickerComponent.prototype.rotationClass;\n/** @type {?} */\nTimePickerComponent.prototype.getDegree;\n/** @type {?} */\nTimePickerComponent.prototype.core;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { ITime } from './definitions';\nexport class AtpCoreService {\nconstructor() { }\n/**\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\npublic allowedTimes (min, max) {\n    const /** @type {?} */ allTimes = [];\n    const /** @type {?} */ nowMinHour = +min.split(':')[0];\n    const /** @type {?} */ nowMaxHour = +max.split(':')[0];\n    const /** @type {?} */ nowMinMin = +min.split(':')[1];\n    const /** @type {?} */ nowMaxMin = +max.split(':')[1];\n    for (let /** @type {?} */ i = nowMinHour; i <= nowMaxHour; i++) {\n      let /** @type {?} */ j = 0, /** @type {?} */\n          jDest = 59;\n      if (i === nowMinHour) {\n        j = nowMinMin;\n      }else if (i === nowMaxHour) {\n        jDest = nowMaxMin;\n      }\n      for (j; j <= jDest; j++) {\n        const /** @type {?} */ hour = i <= 12 ? i : i - 12;\n        const /** @type {?} */ minute = j;\n        const /** @type {?} */ ampm = i < 12 ? 'AM' : 'PM';\n        allTimes.push(hour + ':' + minute + ' ' + ampm);\n      }\n    }\n    return allTimes;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\npublic ClockMaker (type: 'minute' | 'hour'): Array<any> {\n    const /** @type {?} */ items = [];\n    const /** @type {?} */ timeVal = (type === 'minute') ? 60 : 12;\n    const /** @type {?} */ timeStep = (type === 'minute') ? 5 : 1;\n    const /** @type {?} */ timeStart = (type === 'minute') ? 0 : 1;\n    const /** @type {?} */ r = 124;\n    const /** @type {?} */ j = r - 25;\n\n    for (let /** @type {?} */ min = timeStart; min <= timeVal; min += timeStep) {\n      if (min !== 60) {\n        const /** @type {?} */ str = String(min);\n        const /** @type {?} */ x = j * Math.sin(Math.PI * 2 * (min / timeVal));\n        const /** @type {?} */ y = j * Math.cos(Math.PI * 2 * (min / timeVal));\n\n        items.push({\n          time: str,\n          left: (x + r - 17) + 'px',\n          top: (-y + r - 17) + 'px',\n          type\n        });\n      }\n    }\n    return items;\n  }\n/**\n * @param {?} time\n * @return {?}\n */\npublic TimeToString(time: ITime): string {\n    const { ampm, minute, hour } = time;\n    let /** @type {?} */ hh = ampm === 'PM' ? +hour + 12 : +hour;\n    if (ampm === 'AM' && hh === 12) {\n      hh = 0;\n    }\n    if ( hh === 24) {\n      hh = 12;\n    }\n    hh = hh < 10 ? '0' + hh : /** @type {?} */(( '' + hh as any));\n    const /** @type {?} */ mm = minute < 10 ? '0' + minute : minute;\n    return `${hh}:${mm}`;\n  }\n/**\n * Converts 00:00 format to ITime object\n * @param {?} time\n * @return {?}\n */\npublic StringToTime (time: string): ITime {\n    const [h, m] = time.split(':');\n    let /** @type {?} */ hour = +h > 12 ? +h - 12 : +h;\n    hour = hour === 0 ? 12 : hour;\n    const /** @type {?} */ ampm = +h >= 12 ? 'PM' : 'AM';\n    return {\n      ampm, minute: +m, hour\n    };\n  }\n/**\n * \\@experimental\n * @param {?} ele\n * @param {?} parrentPos\n * @param {?} step\n * @return {?}\n */\npublic CalcDegrees (ele: any, parrentPos: any, step: number): number {\n    const /** @type {?} */ clock = {\n      width: ele.currentTarget.offsetWidth,\n      height: ele.currentTarget.offsetHeight\n    };\n    const /** @type {?} */ targetX = clock.width / 2;\n    const /** @type {?} */ targetY = clock.height / 2;\n    const /** @type {?} */ Vx = Math.round((ele.clientX - parrentPos.left) - targetX);\n    const /** @type {?} */ Vy = Math.round(targetY - (ele.clientY - parrentPos.top));\n    let /** @type {?} */ radians = -Math.atan2(Vy, Vx);\n    radians += 2.5 * Math.PI;\n\n    let /** @type {?} */ degrees = Math.round(radians * 180 / Math.PI);\n    const /** @type {?} */ degMod = degrees % step;\n    if (degMod >= step / 2) {\n      degrees = degrees + (step - degMod);\n    } else if (degMod < step / 2) {\n      degrees = degrees - degMod;\n    }\n    return degrees;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AtpCoreService_tsickle_Closure_declarations() {\n/** @type {?} */\nAtpCoreService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAtpCoreService.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["CommonModule","NgModule","HostListener","Output","ViewContainerRef","NG_VALUE_ACCESSOR","Directive","EventEmitter","Injector","ApplicationRef","ComponentFactoryResolver","Injectable","Subject","ViewChild","Component","core"],"mappings":"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"}
